name: Build and Release CLI Tools

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    name: Build CLI Tools
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            artifact_name: kled-linux-amd64
            asset_name: kled-linux-amd64
          - os: macos-latest
            platform: darwin
            arch: amd64
            artifact_name: kled-darwin-amd64
            asset_name: kled-darwin-amd64
          - os: windows-latest
            platform: windows
            arch: amd64
            artifact_name: kled-windows-amd64.exe
            asset_name: kled-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build unified CLI binary
        shell: bash
        run: |
          mkdir -p bin
          GOOS=${{ matrix.platform }} GOARCH=${{ matrix.arch }} go build -o bin/${{ matrix.artifact_name }} ./cli/unified

      # We're not creating symlinks or batch files anymore - just packaging the unified binary

      - name: Package unified CLI binary (Linux/macOS)
        if: matrix.platform != 'windows'
        shell: bash
        run: |
          cd bin
          zip -j ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}

      - name: Package unified CLI binary (Windows)
        if: matrix.platform == 'windows'
        shell: pwsh
        run: |
          cd bin
          Compress-Archive -Path ${{ matrix.artifact_name }} -DestinationPath ${{ matrix.asset_name }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: bin/${{ matrix.asset_name }}.zip

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            kled-linux-amd64/*.zip
            kled-darwin-amd64/*.zip
            kled-windows-amd64.exe/*.zip
          draft: false
          prerelease: false
